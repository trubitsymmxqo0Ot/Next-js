/*
	Стоит обратить внимание, что при установке prisma мне пришлось также создавать новую папку utils, куда я 
	засунул код из документации, вот ссылка: https://www.prisma.io/docs/orm/more/help-and-troubleshooting/nextjs-help

	Все дело в том, что next js у себя под капотом (в webpack или turbopack, неважно), использует not reload, 
	обновление кода без перезагрузки страницы. Но проблема в том, что при каждом изменении, которое влечет
	за собой ререндер, в призма создается новая схема, которая подключается к нашей бд, рано или поздно запросов
	будет просто очень много и бд упадет. Файл prisma.ts же гарантирует нам то, что схема, как и запрос 
	(именно от схемы, не идет речи про запросы, которые мы пишем в коде и которые могут повторяться несколько
	раз) будет всего 1

	Также, так как я использую posgresql, к бд нужна будет другая ссылка, вот её шаблон:
	postgresql://user:password@localhost:5432/database_name

	где user - posgres
	password - пароль, который мы задавали при установке posgres
	database_name - имя бдЮ, к которой мы будем подключаться 

	Ещё, у меня возникли проблемы при установке prisma. Что я сделал, чтобы её решить:
	Во-первых, удалил .prisma и @prisma через rm -rf
		rm -rf node_modules/.prisma
		rm -rf node_modules/@prisma

	После чего переустановил пакеты через npm install
	И сделал генерацию через npx prisma generate

	Генерацию я сразу не делал, поэтому, возможно, дело было в этом. Проблемы были при импорте PrismaClient 
	через путь @prisma/client, IDE говорила, что такого импортируемого элемента по данному пути не существует
*/